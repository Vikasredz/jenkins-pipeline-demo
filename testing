pipeline {
    agent any

    environment {
        AWS_REGION = 'ap-southeast-2'
        STAGING_SERVER = 'ec2-user@staging.example.com'
        PRODUCTION_SERVER = 'ec2-user@production.example.com'
        SSH_KEY_PATH = 'C:\\path\\to\\your\\private-key.ppk'  // Update accordingly
        PUTTY_PATH = 'C:\\Program Files\\PuTTY'               // Update accordingly
    }

    triggers {
        pollSCM('H/5 * * * *')
    }

    stages {
        stage('Build') {
            steps {
                echo 'Skipping build - no package.json found.'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Skipping tests - no npm test scripts found.'
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Skipping code analysis - no npm environment.'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Skipping security scan - no npm environment.'
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                bat """
                powershell Compress-Archive -Path * -DestinationPath app.zip
                "${env.PUTTY_PATH}\\pscp.exe" -i "${env.SSH_KEY_PATH}" -batch app.zip ${env.STAGING_SERVER}:
                "${env.PUTTY_PATH}\\plink.exe" -i "${env.SSH_KEY_PATH}" -batch ${env.STAGING_SERVER} \\
                    "powershell -Command \\"Expand-Archive -Path app.zip -DestinationPath app -Force; pm2 restart all || pm2 start index.js\\""
                """
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                bat 'newman run staging-tests.postman_collection.json'
            }
        }

        stage('Deploy to Production') {
            steps {
                input message: 'Approve deployment to production?', ok: 'Deploy'
                echo 'Deploying to production...'
                bat """
                powershell Compress-Archive -Path * -DestinationPath app.zip
                "${env.PUTTY_PATH}\\pscp.exe" -i "${env.SSH_KEY_PATH}" -batch app.zip ${env.PRODUCTION_SERVER}:
                "${env.PUTTY_PATH}\\plink.exe" -i "${env.SSH_KEY_PATH}" -batch ${env.PRODUCTION_SERVER} \\
                    "powershell -Command \\"Expand-Archive -Path app.zip -DestinationPath app -Force; pm2 restart all || pm2 start index.js\\""
                """
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
