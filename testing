pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo '🔧 Stage 1: Building the application using npm (build automation tool)'
                bat 'npm install' // or 'mvn clean install' for Maven-based Java projects
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo '🧪 Stage 2: Running unit and integration tests using Jest'
                bat 'npm test' // Use `jest`, `mocha`, or relevant test runner
            }
        }

        stage('Code Analysis') {
            steps {
                echo '🔍 Stage 3: Running code analysis using ESLint'
                bat 'npx eslint . || exit /b 0' // `|| exit /b 0` allows continuation on lint errors
            }
        }

        stage('Security Scan') {
            steps {
                echo '🛡️ Stage 4: Performing security scan using npm audit'
                bat 'npm audit || exit /b 0'
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo '🚀 Stage 5: Deploying to AWS EC2 staging server'
                bat 'echo Simulating SCP/SSH deploy to staging server'
                // Example: bat 'scp -i key.pem dist/* ec2-user@staging-ip:/var/www/app'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo '🧪 Stage 6: Running Postman integration tests on staging using Newman'
                bat 'newman run staging-tests.postman_collection.json || exit /b 0'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo '🚀 Stage 7: Deploying to AWS EC2 production server'
                bat 'echo Simulating SCP/SSH deploy to production server'
                // Example: bat 'scp -i key.pem dist/* ec2-user@prod-ip:/var/www/app'
            }
        }
    }
}
