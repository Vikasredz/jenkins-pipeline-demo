pipeline {
    agent any

    triggers {
        // Poll SCM every 15 minutes (adjust as needed)
        pollSCM('H/15 * * * *')
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building the project using Maven...'
                bat 'mvn clean package'
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests with JUnit/TestNG...'
                bat 'mvn test'
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code with SonarQube...'
                // Assuming SonarQube scanner is configured
                bat 'mvn sonar:sonar'
            }
        }
        
        stage('Security Scan') {
            steps {
                echo 'Performing security scan using OWASP Dependency-Check...'
                // Example command to run OWASP Dependency-Check (adjust path accordingly)
                bat 'dependency-check.bat --project my-app --scan .\\target'
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to Staging AWS EC2...'
                // Placeholder for deployment script/command (PowerShell or batch script)
                bat '.\\deploy-to-ec2.bat staging'
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment using Postman/Newman...'
                bat 'newman run staging-tests.postman_collection.json'
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to Production AWS EC2...'
                bat '.\\deploy-to-ec2.bat production'
            }
        }
    }
}
